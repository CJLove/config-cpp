# Build matrix / environment variable are explained on:
# http://about.travis-ci.org/docs/user/build-configuration/
#
# travis-ci.org specification for config-cpp
# 
language: cpp
os:
  - linux

sudo: required
dist: trusty

matrix:
  fast_finish: true
  include:

  - os: linux
    compiler: gcc
    env: 
      - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-6', 'libboost-all-dev' ]

  - os: linux
    compiler: gcc
    env:
      - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-7', 'libboost-all-dev' ]  

  - os: linux
    compiler: gcc
    env:
      - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-8', 'libboost-all-dev' ] 

  - os: linux
    compiler: gcc
    env:
      - MATRIX_EVAL="CC=gcc-9 && CXX=g++-9"
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-9', 'libboost-all-dev' ] 

  - os: linux
    compiler: gcc
    env:
      - MATRIX_EVAL="CC=gcc-10 && CXX=g++-10"
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-10', 'libboost-all-dev' ] 

before_install:
  - eval "${MATRIX_EVAL}"

  # Install lcov
  - wget http://ftp.de.debian.org/debian/pool/main/l/lcov/lcov_1.11.orig.tar.gz
  - tar xf lcov_1.11.orig.tar.gz
  - sudo make -C lcov-1.11/ install
  # install lcov to coveralls conversion + upload tool
  - gem install coveralls-lcov

  # Install googletest
  - wget https://github.com/google/googletest/archive/release-1.8.1.tar.gz -O /tmp/gtest.tar.gz
  - tar zxf /tmp/gtest.tar.gz
  - pushd googletest-* && mkdir build && cd build && cmake .. && sudo make install && popd

  # Install json
  - wget https://github.com/nlohmann/json/archive/v3.5.0.tar.gz -O /tmp/json.tar.gz
  - tar zxf /tmp/json.tar.gz
  - pushd json-* && mkdir build && cd build && cmake -DJSON_BuildTests=OFF .. && sudo make install && popd

  # Install yaml-cpp
  - wget https://github.com/jbeder/yaml-cpp/archive/yaml-cpp-0.6.2.tar.gz -O /tmp/yaml.tar.gz
  - tar zxf /tmp/yaml.tar.gz
  - pushd yaml-* && mkdir build && cd build && cmake -DBUILD_SHARED_LIBS=ON -DYAML_CPP_BUILD_TESTS=OFF .. && sudo make install && popd

  # Install cxxopts
  - wget https://github.com/jarro2783/cxxopts/archive/v2.1.1.tar.gz -O /tmp/cxxopts.tar.gz
  - tar zxf /tmp/cxxopts.tar.gz
  - pushd cxxopts-* && mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Release .. && sudo make install && popd

  # Install toml11
  - wget https://github.com/ToruNiina/toml11/archive/v3.4.0.tar.gz -O /tmp/toml11.tar.gz
  - tar zxf /tmp/toml11.tar.gz
  - pushd toml11-* && mkdir build && cd build && cmake -Dtoml11_BUILD_TEST=OFF .. && sudo make install && popd

script:
  - mkdir build
  - cd build
  - cmake -DBUILD_COVERAGE=ON -DYAML_SUPPORT=ON -DJSON_SUPPORT=ON -DTOML_SUPPORT=ON -DBUILD_SHARED_LIBS=ON -DBUILD_STATIC_LIBS=OFF -DCMAKE_INSTALL_PREFIX=$PWD/.. -DBUILD_TESTS=ON .. && make
  - ./test/ConfigCppTests

after_success:
  - lcov --directory . --capture --output-file coverage.info # capture coverage info
  - lcov --remove coverage.info 'tests/*' '/usr/*' --output-file coverage.info # filter out system and test code
  - lcov --list coverage.info # debug before upload
  - coveralls-lcov --repo-token ${COVERALLS_TOKEN} coverage.info # uploads to coveral

